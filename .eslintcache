[{"/Users/gaoshaoyun/workspace/react/template/src/App.js":"1","/Users/gaoshaoyun/workspace/react/template/src/index.js":"2","/Users/gaoshaoyun/workspace/react/template/src/utils/index.js":"3","/Users/gaoshaoyun/workspace/react/template/src/store/globalCanvas.js":"4","/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/index.js":"5","/Users/gaoshaoyun/workspace/react/template/src/layouts/Content/index.js":"6","/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/ContextMenu/index.js":"7","/Users/gaoshaoyun/workspace/react/template/src/layouts/hooks/index.js":"8","/Users/gaoshaoyun/workspace/react/template/src/components/ImgComponent/index.js":"9","/Users/gaoshaoyun/workspace/react/template/src/components/TextComponent/index.js":"10","/Users/gaoshaoyun/workspace/react/template/src/components/ButtonComponent/index.js":"11","/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/Img/index.js":"12","/Users/gaoshaoyun/workspace/react/template/src/Context.js":"13","/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/menus.js":"14","/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/AddCmpWrapper/index.js":"15","/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/index tem.js":"16","/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/index.js":"17","/Users/gaoshaoyun/workspace/react/template/src/react-app-env.d.ts":"18","/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/EditCanvas/index.js":"19","/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/EditCmp/index.js":"20","/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/index.js":"21","/Users/gaoshaoyun/workspace/react/template/src/layouts/Header/index.js":"22","/Users/gaoshaoyun/workspace/react/template/src/layouts/Header/Tpl/index.js":"23"},{"size":851,"mtime":1613641389317,"results":"24","hashOfConfig":"25"},{"size":168,"mtime":1613543983544,"results":"26","hashOfConfig":"25"},{"size":1976,"mtime":1613548925846,"results":"27","hashOfConfig":"25"},{"size":7900,"mtime":1613621018648,"results":"28","hashOfConfig":"25"},{"size":1841,"mtime":1613461241666,"results":"29","hashOfConfig":"25"},{"size":3246,"mtime":1613621144018,"results":"30","hashOfConfig":"25"},{"size":2179,"mtime":1613473042680,"results":"31","hashOfConfig":"25"},{"size":218,"mtime":1612509225281,"results":"32","hashOfConfig":"25"},{"size":280,"mtime":1613273269183,"results":"33","hashOfConfig":"25"},{"size":264,"mtime":1612238092345,"results":"34","hashOfConfig":"25"},{"size":272,"mtime":1612928167792,"results":"35","hashOfConfig":"25"},{"size":5974,"mtime":1613532731186,"results":"36","hashOfConfig":"25"},{"size":80,"mtime":1612250052983,"results":"37","hashOfConfig":"25"},{"size":1513,"mtime":1613474865647,"results":"38","hashOfConfig":"25"},{"size":780,"mtime":1612693470520,"results":"39","hashOfConfig":"25"},{"size":4768,"mtime":1612667771715,"results":"40","hashOfConfig":"25"},{"size":8030,"mtime":1613719612465,"results":"41","hashOfConfig":"25"},{"size":40,"mtime":1612766506563,"results":"42","hashOfConfig":"25"},{"size":2334,"mtime":1612863383532,"results":"43","hashOfConfig":"25"},{"size":9235,"mtime":1613716936706,"results":"44","hashOfConfig":"25"},{"size":889,"mtime":1613532088179,"results":"45","hashOfConfig":"25"},{"size":1863,"mtime":1613621238198,"results":"46","hashOfConfig":"25"},{"size":17314,"mtime":1613721180974,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iz1bfu",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gaoshaoyun/workspace/react/template/src/App.js",[],"/Users/gaoshaoyun/workspace/react/template/src/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/utils/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/store/globalCanvas.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/index.js",["99","100"],"import {useState, useEffect, useContext} from \"react\";\nimport {CanvasContext} from \"../../Context\";\nimport {getContainerDom} from \"../../utils\";\nimport Img from \"./Img\";\nimport styles from \"./index.less\";\nimport {\n  isImgComponent,\n  isTextComponent,\n  isButtonComponent,\n  menus,\n} from \"./menus\";\nimport classnames from \"classnames\";\n\nexport default function Cmps(props) {\n  const globalCanvas = useContext(CanvasContext);\n\n  const [list, setList] = useState(null);\n  const handleDragStart = (e, cmp) => {\n    if (cmp.data.type === isImgComponent) {\n      return;\n    }\n    e.dataTransfer.setData(\"add-component\", JSON.stringify(cmp));\n  };\n\n  const handleClick = (e, cmp) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (\n      cmp.data.type === isTextComponent ||\n      cmp.data.type === isButtonComponent\n    ) {\n      globalCanvas.addCmp(cmp);\n      return;\n    }\n    // 图片组件\n    if (list) {\n      setList(null);\n    } else {\n      let l = null;\n      switch (cmp.data.type) {\n        case isImgComponent:\n          l = <Img baseCmp={cmp} />;\n          break;\n        default:\n          l = null;\n      }\n      setList(l);\n    }\n  };\n\n  return (\n    <div id=\"cmps\" className={styles.main}>\n      <div className={styles.cmpList}>\n        {menus.map((item) => (\n          <div\n            key={item.desc}\n            className={styles.cmp}\n            draggable={item.data.type !== isImgComponent}\n            onDragStart={(e) => handleDragStart(e, item)}\n            onClick={(e) => handleClick(e, item)}>\n            {item.desc}\n          </div>\n        ))}\n      </div>\n      {list && (\n        <button\n          className={classnames(\"iconfont icon-close\", styles.close)}\n          onClick={() => setList(null)}></button>\n      )}\n      {list && <ul className={styles.detailList}> {list}</ul>}\n    </div>\n  );\n}\n","/Users/gaoshaoyun/workspace/react/template/src/layouts/Content/index.js",["101"],"import {useEffect, useRef, useState, useContext} from \"react\";\nimport Draggable from \"../Draggable\";\nimport {CanvasContext} from \"../../Context\";\nimport styles from \"./index.less\";\nimport {formatStyle} from \"../../utils\";\nimport Header from \"../Header\";\n\nfunction Content(props) {\n  // 所有组件\n  const globalCanvas = useContext(CanvasContext);\n\n  // 获取画布属性\n  const canvasStyle = globalCanvas.getCanvasStyle();\n\n  const cmps = globalCanvas.getCmps();\n\n  // 画布的位置，\n  const [canvasPos, setCanvasPos] = useState(null);\n\n  const canvasRef = useRef();\n\n  // console.log(\"cmps\", cmps, JSON.stringify(globalCanvas.getCanvasData())); //sy-log\n\n  useEffect(() => {\n    // 记录画布的位置，因为最终记录的位置是基于画布计算出来的相对位置\n    const canvasPos = canvasRef.current.getBoundingClientRect();\n    setCanvasPos(canvasPos);\n\n    // 取消选中\n\n    document.getElementById(\"root\").addEventListener(\"click\", cancelSelect);\n  }, []);\n\n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // 新增的组件\n    let addingCmp = e.dataTransfer.getData(\"add-component\");\n\n    if (addingCmp) {\n      // 拖拽进来新增的组件\n      addingCmp = JSON.parse(addingCmp);\n      const top = e.pageY - canvasPos.top - 15;\n      const left = e.pageX - canvasPos.left - 40;\n      let resData = {\n        ...addingCmp,\n        data: {\n          ...addingCmp.data,\n          style: {\n            ...addingCmp.data.style,\n            top,\n            left,\n          },\n        },\n      };\n      globalCanvas.addCmp(resData);\n    } else {\n      // 拖拽画布内的组件\n      let startPos = e.dataTransfer.getData(\"startPos\");\n      startPos = JSON.parse(startPos);\n\n      let disX = e.pageX - startPos.pageX;\n      let disY = e.pageY - startPos.pageY;\n\n      // 获取当前选中的组件的最新信息\n      const selectedCmp = globalCanvas.getSelectedCmp();\n\n      const top = selectedCmp.data.style.top + disY;\n      const left = selectedCmp.data.style.left + disX;\n      globalCanvas.updateSelectedCmpStyle({top, left});\n    }\n  };\n\n  const cancelSelect = (e) => {\n    if (\n      [\"canvas\", \"root\", \"app\", \"content\", \"editCmp\"].indexOf(e.target.id) > -1\n    ) {\n      globalCanvas.setSelectedCmp(null);\n    }\n  };\n\n  return (\n    <div id=\"content\" className={styles.main}>\n      <Header />\n      <div\n        className={styles.canvas}\n        id=\"canvas\"\n        style={{\n          ...formatStyle(canvasStyle),\n          backgroundImage: `url(${canvasStyle.backgroundImage})`,\n        }}\n        ref={canvasRef}\n        onDragEnter={handleDragEnter}\n        onDragOver={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        // 点击画布非组件区域的时候，取消选中的组件\n      >\n        {canvasRef.current &&\n          cmps.map((cmp, index) => {\n            return cmp.data ? (\n              <Draggable index={index} key={cmp.onlyKey} />\n            ) : null;\n          })}\n      </div>\n    </div>\n  );\n}\nexport default Content;\n","/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/ContextMenu/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/hooks/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/components/ImgComponent/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/components/TextComponent/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/components/ButtonComponent/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/Img/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/Context.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/menus.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Cmps/AddCmpWrapper/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/index tem.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Draggable/index.js",["102","103"],"import {Component} from \"react\";\nimport {CanvasContext} from \"../../Context\";\nimport {debounce, formatStyle} from \"../../utils\";\nimport ContextMenu from \"./ContextMenu\";\nimport {\n  isButtonComponent,\n  isImgComponent,\n  isTextComponent,\n} from \"../Cmps/menus\";\n// 画布组件\nimport TextComponent from \"../../components/TextComponent\";\nimport ButtonComponent from \"../../components/ButtonComponent\";\nimport ImgComponent from \"../../components/ImgComponent\";\nimport classnames from \"classnames\";\nimport styles from \"./index.less\";\n\n// setSelectCmp 选中的组件\n// selected 是否是选中的组件，选中的组件加橙色标记边框\nexport default class Draggable extends Component {\n  static contextType = CanvasContext;\n  constructor(props, context) {\n    super(props);\n    this.state = {showContextMenu: false};\n  }\n\n  componentDidMount() {\n    document\n      .getElementById(\"root\")\n      .addEventListener(\"click\", this.setShowContextMenu);\n    // 注册组件\n    this.unregisterCmpsEntity = this.context.registerCmpsEntity(\n      this.context.getCmp(this.props.index).onlyKey,\n      this\n    );\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById(\"root\")\n      .removeEventListener(\"click\", this.setShowContextMenu);\n\n    this.unregisterCmpsEntity();\n  }\n\n  onStoreChange = () => {\n    this.forceUpdate();\n  };\n\n  setShowContextMenu = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    this.state.showContextMenu && this.setState({showContextMenu: false});\n  };\n\n  handleMouseDown = (e, direction) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const cmp = this.context.getCmp(this.props.index);\n\n    let startX = e.pageX;\n    let startY = e.pageY;\n\n    const move = (e) => {\n      let x = e.pageX;\n      let y = e.pageY;\n\n      let disX = x - startX;\n      let disY = y - startY;\n      let newStyle = {};\n\n      if (direction) {\n        if (direction.indexOf(\"top\") >= 0) {\n          disY = 0 - disY;\n          newStyle.top = cmp.data.style.top - disY;\n        }\n\n        if (direction.indexOf(\"left\") >= 0) {\n          disX = 0 - disX;\n          newStyle.left = cmp.data.style.left - disX;\n        }\n      }\n\n      // 特别频繁改变，加上一个标记，\n      debounce(\n        this.context.updateSelectedCmpStyle(\n          {\n            ...newStyle,\n            width: cmp.data.style.width + disX,\n            height: cmp.data.style.height + disY,\n          },\n          \"frequently\"\n        )\n      );\n    };\n\n    const up = () => {\n      document.removeEventListener(\"mousemove\", move);\n      document.removeEventListener(\"mouseup\", up);\n      this.context.recordCanvasChangeHistory();\n    };\n\n    document.addEventListener(\"mousemove\", move);\n    document.addEventListener(\"mouseup\", up);\n  };\n\n  handleDragStart = (e) => {\n    this.setActive(e);\n    let pageX = e.pageX;\n    let pageY = e.pageY;\n    e.dataTransfer.setData(\"startPos\", JSON.stringify({pageX, pageY}));\n  };\n\n  setActive = (e) => {\n    e.stopPropagation();\n    const selectCmp = this.context.getSelectedCmp();\n    const cmp = this.context.getCmp(this.props.index);\n\n    this.context.setSelectedCmp(cmp);\n  };\n\n  handleContextMenu = (e) => {\n    e.preventDefault();\n    this.setState({showContextMenu: true});\n  };\n\n  handleMouseDownofRotate = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const {getCmp, updateSelectedCmpStyle} = this.context;\n\n    const cmp = getCmp(this.props.index);\n\n    let startX = e.pageX;\n    let startY = e.pageY;\n\n    const move = (e) => {\n      let x = e.pageX;\n      let y = e.pageY;\n\n      let disX = x - startX;\n      let disY = y - startY;\n\n      const deg = (360 * Math.atan2(disY, disX)) / (2 * Math.PI);\n\n      // 特别频繁改变，加上一个标记，\n      debounce(\n        updateSelectedCmpStyle(\n          {\n            transform: `rotate(${deg}deg)`,\n          },\n          \"frequently\"\n        )\n      );\n    };\n\n    const up = () => {\n      document.removeEventListener(\"mousemove\", move);\n      document.removeEventListener(\"mouseup\", up);\n      this.context.recordCanvasChangeHistory();\n    };\n\n    document.addEventListener(\"mousemove\", move);\n    document.addEventListener(\"mouseup\", up);\n  };\n\n  render() {\n    const {index} = this.props;\n\n    const globalCanvas = this.context;\n\n    const cmp = globalCanvas.getCmp(this.props.index);\n\n    const selectCmp = globalCanvas.getSelectedCmp();\n\n    const selected = selectCmp && selectCmp.onlyKey === cmp.onlyKey;\n\n    const {showContextMenu} = this.state;\n\n    const {style} = cmp.data;\n\n    const top = style.top - 4;\n    const left = style.left - 4;\n    const width = style.width,\n      height = style.height;\n\n    return (\n      <>\n        <div\n          id={\"cmp\" + cmp.onlyKey}\n          className={\n            styles.main + \" \" + (selected ? \"selected\" : styles.unselected)\n          }\n          style={{\n            ...formatStyle(style, true),\n            zIndex: index,\n            //animationPlayState: \"pouse\",\n          }}\n          draggable={true}\n          onDragStart={this.handleDragStart}\n          onClick={this.setActive}\n          onContextMenu={this.handleContextMenu}>\n          {getComponent(cmp)}\n        </div>\n        {selected && (\n          <ul\n            className={styles.stretch}\n            style={{transform: `rotate${style.transform}`}}>\n            <li\n              className={classnames(styles.rotate, \"iconfont icon-xuanzhuan\")}\n              style={{\n                top: top - 20,\n                left: left + width / 2,\n              }}\n              onMouseDown={this.handleMouseDownofRotate}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{top, left}}\n              onMouseDown={(e) => this.handleMouseDown(e, \"top left\")}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{\n                top,\n                left: left + width / 2,\n              }}\n              onMouseDown={(e) => this.handleMouseDown(e, \"top\")}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{top, left: left + width + 2}}\n              onMouseDown={(e) => this.handleMouseDown(e, \"top right\")}\n            />\n            <li\n              style={{\n                top: top + height / 2,\n                left: left + width + 2,\n              }}\n              onMouseDown={this.handleMouseDown}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{\n                top: top + height + 2,\n                left: left + width + 2,\n              }}\n              onMouseDown={this.handleMouseDown}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{\n                top: top + height + 2,\n                left: left + width / 2,\n              }}\n              onMouseDown={this.handleMouseDown}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{\n                top: top + height + 2,\n                left,\n              }}\n              onMouseDown={(e) => this.handleMouseDown(e, \"bottom left\")}\n            />\n            <li\n              className={styles.stretchDot}\n              style={{\n                top: top + height / 2,\n                left,\n              }}\n              onMouseDown={(e) => this.handleMouseDown(e, \"left\")}\n            />\n          </ul>\n        )}\n        {showContextMenu && (\n          <ContextMenu\n            index={index}\n            pos={{top: style.top - 80, left: style.left + 60}}\n            cmp={cmp}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport function getComponent(cmp) {\n  const {data} = cmp;\n  let res = null;\n  switch (data.type) {\n    case isTextComponent:\n      res = <TextComponent {...data} />;\n      break;\n    case isButtonComponent:\n      res = <ButtonComponent {...data} />;\n      break;\n    case isImgComponent:\n      res = <ImgComponent {...data} />;\n      break;\n    default:\n      res = null;\n  }\n  return res;\n}\n","/Users/gaoshaoyun/workspace/react/template/src/react-app-env.d.ts",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/EditCanvas/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/EditCmp/index.js",[],"/Users/gaoshaoyun/workspace/react/template/src/layouts/Edit/index.js",["104","105"],"import {Component} from \"react\";\nimport {CanvasContext} from \"../../Context\";\nimport EditCanvas from \"./EditCanvas\";\nimport EditCmp from \"./EditCmp\";\nimport styles from \"./index.less\";\n\nexport default class Edit extends Component {\n  static contextType = CanvasContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showIndex: 0,\n    };\n  }\n  onStoreChange = () => {\n    this.forceUpdate();\n  };\n\n  componentDidMount() {\n    this.unregister = this.context.registerStoreChangeCmps(this);\n  }\n\n  componentWillUnmount() {\n    this.unregister();\n  }\n\n  render() {\n    const selectedCmp = this.context.getSelectedCmp();\n    const {showIndex} = this.state;\n    return selectedCmp ? (\n      <EditCmp\n        {...this.props}\n        selectedCmp={selectedCmp}\n        globalCanvas={this.context}\n      />\n    ) : (\n      <EditCanvas globalCanvas={this.context} />\n    );\n  }\n}\n","/Users/gaoshaoyun/workspace/react/template/src/layouts/Header/index.js",["106"],"import {useContext, useState, useCallback, useEffect} from \"react\";\nimport styles from \"./index.less\";\nimport classnames from \"classnames\";\nimport {CanvasContext} from \"../../Context\";\nimport Tpl from \"./Tpl\";\n\nexport default function Header(props) {\n  const [showTpl, setShowTpl] = useState(false);\n  const globalCanvas = useContext(CanvasContext);\n\n  const prevCanvas = () => {\n    globalCanvas.goPrevCanvasHistory();\n  };\n\n  const nextCanvas = () => {\n    globalCanvas.goNextCanvasHistory();\n  };\n\n  const openOrCloseTpl = useCallback(() => {\n    setShowTpl(!showTpl);\n  }, [showTpl]);\n\n  const emptyCanvas = () => {\n    globalCanvas.emptyCanvas();\n  };\n\n  const release = () => {\n    console.log(\"发布\", globalCanvas.getCanvasData()); //sy-log\n  };\n\n  return (\n    <>\n      <ul className={styles.main}>\n        <li className={styles.item} onClick={openOrCloseTpl}>\n          选择模板\n        </li>\n        <li className={styles.item} onClick={prevCanvas}>\n          <span\n            className={classnames(\n              \"iconfont icon-chexiaofanhuichehuishangyibu\",\n              styles.lastStep\n            )}></span>\n          <span className={styles.txt}>上一步</span>\n        </li>\n        <li className={styles.item} onClick={nextCanvas}>\n          <span\n            className={classnames(\n              \"iconfont icon-chexiaofanhuichehuishangyibu\",\n              styles.nextStep\n            )}></span>\n          <span className={styles.txt}>下一步</span>\n        </li>\n\n        <li className={styles.item} onClick={emptyCanvas}>\n          清空画布\n        </li>\n        <li className={styles.item} onClick={release}>\n          发布\n        </li>\n        {/* <li className={styles.item}>下架</li> */}\n      </ul>\n      {showTpl && (\n        <Tpl openOrCloseTpl={openOrCloseTpl} globalCanvas={globalCanvas} />\n      )}\n    </>\n  );\n}\n","/Users/gaoshaoyun/workspace/react/template/src/layouts/Header/Tpl/index.js",["107","108"],{"ruleId":"109","severity":1,"message":"110","line":1,"column":19,"nodeType":"111","messageId":"112","endLine":1,"endColumn":28},{"ruleId":"109","severity":1,"message":"113","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":32,"column":6,"nodeType":"116","endLine":32,"endColumn":8,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":116,"column":11,"nodeType":"111","messageId":"112","endLine":116,"endColumn":20},{"ruleId":"109","severity":1,"message":"119","line":133,"column":11,"nodeType":"111","messageId":"112","endLine":133,"endColumn":14},{"ruleId":"109","severity":1,"message":"120","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"121","line":30,"column":12,"nodeType":"111","messageId":"112","endLine":30,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":1,"column":44,"nodeType":"111","messageId":"112","endLine":1,"endColumn":53},{"ruleId":"109","severity":1,"message":"110","line":1,"column":9,"nodeType":"111","messageId":"112","endLine":1,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":64,"column":13,"nodeType":"124","endLine":64,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getContainerDom' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cancelSelect'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'selectCmp' is assigned a value but never used.","'cmp' is assigned a value but never used.","'styles' is defined but never used.","'showIndex' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"126","fix":"127"},"Update the dependencies array to be: [cancelSelect]",{"range":"128","text":"129"},[881,883],"[cancelSelect]"]